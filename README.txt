Запуск:
'python run.py -f дата_начала_сбора -t дата_окончания_сбора -k тип_ключевых_слов -p путь_к_файлу_с_ключевыми_словами'

дата_начала_сбора - дата в формате дд.мм.гггг
дата_окончания_сбора - дата в формате дд.мм.гггг
тип_ключевых_слов - слова аналитиков или модели (по умолчанию аналитики)
путь_к_файлу_с_ключевыми_словами - путь к файлу с ключевыми словами (по умолчанию LDA.txt)

Пример 1 - 'python run.py -f 16.03.2022 -t 25.05.2022'
Пример 2 - 'python run.py -f 16.03.2022 -t 25.05.2022 -k m -p "yake_abb.txt"'

При запуске без параметров, данные будут собираться за текущий день.
Пример - 'python run.py'

В результате работы скрипта будет создано 2 файла:
log_links.csv - файл, содержащий все статьи, за указанный период
result.csv - файл, сожержащий только те статьи, которые прошли фильтрацию


Файл check_csv.py предназначен для запуска алгоритма отбора статей из общего набора на случай, если сохранился файл log_links.csv, но фильтрация оборвалась.

Запуск:
'python check_csv.py -p путь_к_файлу_log_links.csv -k тип_ключевых_слов -p путь_к_файлу_с_ключевыми_словами'

путь_к_файлу_log_links.csv - путь к файлу со статьями (результат работы скрипта run.py)
тип_ключевых_слов - слова аналитиков или модели (по умолчанию аналитики)
путь_к_файлу_с_ключевыми_словами - путь к файлу с ключевыми словами (по умолчанию LDA.txt)

Пример 1 - 'python check_csv.py -p "C:\Users\18888333\Documents\log_links.csv"'
Пример 2 - 'python check_csv.py -p "C:\Users\18888333\Documents\log_links.csv" -k m -f "LDA.txt"'

В результате работы скрипта будет создан файл result.csv, сожержащий только те статьи, которые прошли фильтрацию.